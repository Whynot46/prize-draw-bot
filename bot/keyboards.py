from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton
import bot.db as db
import json


async def get_main_menu_keyboard(is_admin: bool = False):
    if is_admin:
        buttons = [
            [KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à")],
            [KeyboardButton(text="–í—Å–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏")],
            [KeyboardButton(text="–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã")],
            [KeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")]  
        ]
    else:
        buttons = [
            [KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π")],
            [KeyboardButton(text="–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞")]
        ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)


async def get_giveaways_list_keyboard(giveaways):
    if not giveaways:
        return None
    
    inline_keyboard = []
    for giveaway in giveaways:
        inline_keyboard.append([
            InlineKeyboardButton(
                text=f"{giveaway[1]}",
                callback_data=f"participate_{giveaway[0]}"
            )
        ])
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_referral_keyboard(user_id: int):
    return InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(
            text="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É",
            callback_data=f"copy_ref_{user_id}"
        )
    ]])


async def get_giveaway_management_keyboard(giveaway_id: int):
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π",
                callback_data=f"select_winners_{giveaway_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="–£–¥–∞–ª–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à",
                callback_data=f"delete_giveaway_{giveaway_id}"
            )
        ]
    ])
    

async def get_channels_list_keyboard(channels):
    inline_keyboard = []
    for channel_id in channels:
        inline_keyboard.append([
            InlineKeyboardButton(
                text=f"–ö–∞–Ω–∞–ª {channel_id}",
                url=f"https://t.me/{channel_id}"
            )
        ])
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_channels_selection_keyboard(channels, selected_channels=None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤ —Å –æ—Ç–º–µ—Ç–∫–æ–π –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö"""
    if selected_channels is None:
        selected_channels = []
    
    inline_keyboard = []
    for channel in channels:
        channel_id, title = channel[0], channel[1]
        is_selected = channel_id in selected_channels
        prefix = "‚úÖ " if is_selected else ""
        
        inline_keyboard.append([
            InlineKeyboardButton(
                text=f"{prefix}{title}",
                callback_data=f"toggle_channel_{channel_id}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã)
    if selected_channels:
        inline_keyboard.append([
            InlineKeyboardButton(
                text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä",
                callback_data="save_channels"
            )
        ])
    else:
        inline_keyboard.append([
            InlineKeyboardButton(
                text="‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª",
                callback_data="no_channels_selected"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_winners_selection_keyboard(giveaway_id, participants, page=0):
    items_per_page = 10
    start_idx = page * items_per_page
    end_idx = start_idx + items_per_page
    paginated_participants = participants[start_idx:end_idx]
    
    giveaway = await db.get_giveaway_details(giveaway_id)
    if not giveaway:
        return InlineKeyboardMarkup(inline_keyboard=[])
    
    current_winners = json.loads(giveaway['winners_ids']) if giveaway['winners_ids'] else []
    
    inline_keyboard = []
    for user_id in paginated_participants:
        user = await db.get_user_info(user_id)
        if not user:
            continue
            
        display_name = f"@{user['username']}" if user['username'] else user['fullname']
        if user_id in current_winners:
            display_name = "‚úÖ " + display_name
            
        inline_keyboard.append([
            InlineKeyboardButton(
                text=display_name,
                callback_data=f"winner_{giveaway_id}_{user_id}_{page}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    navigation_buttons = []
    if page > 0:
        navigation_buttons.append(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"winners_page_{giveaway_id}_{page-1}"
            )
        )
    
    if end_idx < len(participants):
        navigation_buttons.append(
            InlineKeyboardButton(
                text="–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è",
                callback_data=f"winners_page_{giveaway_id}_{page+1}"
            )
        )
    
    if navigation_buttons:
        inline_keyboard.append(navigation_buttons)
    
    # –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ—Ç–º–µ–Ω—ã
    inline_keyboard.append([
        InlineKeyboardButton(
            text=f"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å ({len(current_winners)}/{giveaway['winners_count']})",
            callback_data=f"save_winners_{giveaway_id}"
        ),
        InlineKeyboardButton(
            text="–ù–∞–∑–∞–¥",
            callback_data=f"cancel_winners_{giveaway_id}"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_participate_keyboard(giveaway_id):
    participate_button = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å",
            callback_data=f"participate_{giveaway_id}"
        )]
    ])
    return participate_button


async def get_subscription_check_keyboard(channels):
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º: —Å—Å—ã–ª–∫–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã -> fallback –∫ ID"""
    buttons = []
    for channel in channels:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Å—ã–ª–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∏–∑ ID
        url = channel.get('link') or f"https://t.me/c/{str(abs(channel['channel_id']))}"
        
        buttons.append([
            InlineKeyboardButton(
                text=f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {channel['title']}", 
                url=url
            )
        ])
    
    buttons.append([
        InlineKeyboardButton(
            text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", 
            callback_data="check_subscriptions"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


async def get_broadcast_media_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ", callback_data="confirm_photos")],
        [InlineKeyboardButton(text="–ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–æ—Ç–æ", callback_data="no_photos")],
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="cancel_broadcast")]
    ])


async def get_broadcast_confirmation_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="approve_broadcast")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_broadcast")]
    ])


async def get_broadcast_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ")],
            [KeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ")],
            [KeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")]
        ],
        resize_keyboard=True
    )


async def get_broadcast_confirmation_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")],
            [KeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")]
        ],
        resize_keyboard=True
    )


async def get_giveaway_confirmation_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_giveaway"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_giveaway")
        ]
    ])


async def remove_keyboard():
    return ReplyKeyboardRemove()